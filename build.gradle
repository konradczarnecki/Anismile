buildscript {
	ext {
		springBootVersion = '1.5.7.RELEASE'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply from: "${projectDir}/deeteeo.gradle"

group = 'konra'
version = '0.1'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-actuator")
	compile('org.apache.commons:commons-io:1.3.2')
	compile('org.jsoup:jsoup:1.8.1')
	runtime('mysql:mysql-connector-java')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
	archiveName "${project.name}.jar"
}

node {
	version = '6.8.0'
	npmVersion = '3.10.8'
	download = false
	workDir = file("${projectDir}/client")
	nodeModulesDir = file("${project.projectDir}/client")
}

task buildAngular(type: NpmTask){
	args = ['run', 'build']
}

task copyWebcontent(type: Copy){
	dependsOn buildAngular
	from "${projectDir}/client/dist" into "${projectDir}/src/main/resources/static"
	mustRunAfter buildAngular
}

task buildFront {
	dependsOn copyWebcontent
	mustRunAfter copyWebcontent
}

if(project.property('build.front') == 'true'){
	bootRun.dependsOn buildFront
	build.dependsOn copyWebcontent
	jar.mustRunAfter copyWebcontent
}



